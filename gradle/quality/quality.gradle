apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

def final CONFIG_DIR = "${project.rootDir}/gradle/quality"
def final REPORT_DIR = "${project.buildDir}/reports"
def final IGNORE_ERROR = true
def final SOURCE = "src/main/java"
def final INCLUDE_PATTERN = "**/*.java"
def final EXCLUDE_PATTERN = "**/gen/**"

android {
    lintOptions {
        abortOnError !IGNORE_ERROR
        xmlReport false
        htmlReport true
        absolutePaths false
        lintConfig file("$CONFIG_DIR/lint.xml")
        htmlOutput file("$REPORT_DIR/lintReport.html")
    }
}

task checkstyle(type: Checkstyle) {
    showViolations true
    configFile file("${CONFIG_DIR}/checkstyle.xml")
    ignoreFailures IGNORE_ERROR
    source SOURCE
    include INCLUDE_PATTERN
    exclude EXCLUDE_PATTERN
    classpath = files()
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination "$REPORT_DIR/checkstyle.html"
    }
}

task findbugs(type: FindBugs) {
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$CONFIG_DIR/findbugsExludeFilter.xml")
    classes = files("${project.buildDir}/intermediates/classes")
    ignoreFailures = IGNORE_ERROR
    source SOURCE
    include INCLUDE_PATTERN
    exclude EXCLUDE_PATTERN
    classpath = files()
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination "$REPORT_DIR/findbugs.html"
    }
}

task pmd(type: Pmd) {
    consoleOutput true
    ruleSetFiles = files("$CONFIG_DIR/ruleSet.xml")
    ignoreFailures = IGNORE_ERROR
    source SOURCE
    include INCLUDE_PATTERN
    exclude EXCLUDE_PATTERN
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination "$REPORT_DIR/pmd.html"
    }
}

// http://vincentbrison.com/2014/07/19/how-to-improve-quality-and-syntax-of-your-android-code
// check.dependsOn 'checkstyle', 'pmd', 'findbugs'
afterEvaluate {
    if (project.tasks.findByName('check')) {
        check.dependsOn 'lint', 'checkstyle', 'findbugs', 'pmd'
    }
}